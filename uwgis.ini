[uwsgi]
socket = 0.0.0.0:8000
# 设置0.0.0.0表示可以接收不同服务器的nginx发送过来的请求， 127.0.0.1表示只接收同一服务器发送过来的请求， 8000为应用内的监听端口
# http = 0.0.0.0:8000 # http为直接作为web服务器启动
# http = :5000 # 启动程序时所使用的地址和端口，通常在本地运行flask项目，
# 项目目录
chdir = /home/flaskproject/
# flask程序的启动文件，通常在本地是通过运行python manage.py runserver 来启动项目的
wsgi-file = manage.py
# 程序内启用的application变量名
callable = app
# 处理器个数，进程个数 .一般最大填写CPU的核心数量
processes = 4
# 线程个数 ，默认的linux系统中一个进程最多2048个线程。 1 ~ 1024
threads = 2
# 获取uwsgi统计信息的服务地址 ，只能本机访问
stats = 127.0.0.1:9191
# 保存pid信息，方便停止服务和重启的时候用
pidfile = uwsgi.pid
# 后台运行时记录uwsgi的运行日志
daemonize = ./log/uwsgi.log
# 优雅重启 ，当需要连接cassandra时,uwsgi无法启动服务,可以 使用该选项设置
lazy-apps = true
# 使用chain-reloading 逐个work重 启,服务不中断, 命令是 echo c > mfifo
master-fifo = /opt/mt-search/web-service/mfifo
# 修改app.py内任意东西 保存即可重启uwsgi
touch-chain-reload = true
